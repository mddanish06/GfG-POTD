// 🎉Histogram Max Rectangular Area🏆

// Approach:
// 👉Used a stack to efficiently track heights and compute max area.
// 👉Calculated width dynamically while popping elements from the stack.
// 👉Time complexity: O(N).

public static int getMaxArea(int arr[]) {
    // your code here
    int n = arr.length;
    Stack<Integer> st = new Stack();
    int maxArea = 0;
    int i = 0;
    
    while(i < n){
        if(st.isEmpty() || arr[i] >= arr[st.peek()]){
            st.push(i++);
        }else{
            int top = st.pop();
            int width = st.isEmpty() ? i : i-st.peek()-1;
            maxArea = Math.max(maxArea, arr[top] * width);
        }
    }
    
    while(!st.isEmpty()){
        int top = st.pop();
        int width = st.isEmpty() ? i : i-st.peek()-1;
        maxArea = Math.max(maxArea, arr[top] * width);
    }
    
    return maxArea;
}