// 🎉K Sized Subarray Maximum🏆

// 👉 Used a deque to find the maximum value in each subarray of size k efficiently.
// 👉 Removed out-of-bound elements and maintained decreasing order in the deque.
// 👉 Time complexity: O(N).

class Solution{    
    public ArrayList<Integer> maxOfSubarrays(int arr[], int k) {
        // code here
        int n = arr.length;
        ArrayList<Integer> res = new ArrayList();
        Deque<Integer> deque = new LinkedList();
        
        for(int i=0; i<n; i++){
            if(!deque.isEmpty() && deque.peekFirst() == i-k){
                deque.pollFirst();
            }
            while(!deque.isEmpty() && arr[deque.peekLast()] <= arr[i]){
                deque.pollLast();
            }
            deque.offerLast(i);
            if(i >= k-1){
                res.add(arr[deque.peekFirst()]);
            }
        }
        
        return res;
    }
}