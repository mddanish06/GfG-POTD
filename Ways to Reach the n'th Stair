// 🎉Ways to Reach the n’th Stair🏆

// Approach:
// 👉Used Dynamic Programming to count the number of ways to reach the top.
// 👉Considered steps of size 1 and 2, forming a Fibonacci-like recurrence relation.
// 👉Time complexity: O(N).

class Solution {
    int countWays(int n) {
        // your code here
        if(n <= 1) return 1;
        int a = 1, b = 1, temp;
        
        for(int i=2; i<=n; i++){
            temp = (a + b);
            a = b;
            b = temp;
        }
        
        return b;
    }
}